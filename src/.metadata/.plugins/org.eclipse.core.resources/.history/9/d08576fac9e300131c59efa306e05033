package controller;

import javax.swing.JTree;

import model.ClusterModel;
import model.ModelInfo;
import model.TreeNode;

import java.util.Vector;

import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

import view.Main_view;

public class TreeAction {

	private static TreeAction instance;
	
	private int groupIndex;
	
	private TreeAction(){}
	
	public static TreeAction getInstance(){
		if(instance==null){
			instance = new TreeAction();
		}
		return instance;
	}
	
	Vector<DefaultMutableTreeNode> depthSearch(Vector<DefaultMutableTreeNode> nodes, TreeNode N)
	{
		DefaultMutableTreeNode tr = new DefaultMutableTreeNode(N.key);
		nodes.add(tr);
		nodes.get(groupIndex).add(tr);

		
		if(N.isGroup()==false)
		{
			return nodes;
		}
		else
		{
			int prevIndex = groupIndex;
			groupIndex = nodes.size()-1;
			for(int i=0; i<N.childs.size();  i++)
			{
				depthSearch(nodes,N.childs.get(i));	
			}
			groupIndex = prevIndex;
		}
		return nodes;
	}
	
	public JTree makeTree()
	{
		Vector<DefaultMutableTreeNode> nodes = new Vector<DefaultMutableTreeNode>();
		
		groupIndex =0;
		int size = ModelInfo.getInstance().getRoot().childs.size();
		DefaultMutableTreeNode tr = new DefaultMutableTreeNode(ModelInfo.getInstance().getRoot().key);
		nodes.add(tr);
		for(int i=0; i<size; i++)
		{
			nodes = depthSearch(nodes, ModelInfo.getInstance().getRoot().childs.get(i));
		}
		JTree newTree = new JTree(nodes.get(0)); 
		return newTree;
	}
	
	public void moveAction(int dir)
	{
		DefaultTreeModel model = (DefaultTreeModel)Main_view.getInstance().getClasstree().getModel();
		DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)Main_view.getInstance().getClasstree().getLastSelectedPathComponent();
		if(selectedNode==null)
			return;
		String nodeName = new String();
		nodeName = (String) selectedNode.getUserObject();
		ClusterModel.getInstance().moveModule(nodeName, dir);
		//for(int i=0; i<7; i++)
			//System.out.print(ModelInfo.getInstance().getRoot().childs.get(i).key+"  ");
	}
	
	public void removeAction()
	{
		DefaultTreeModel model = (DefaultTreeModel)Main_view.getInstance().getClasstree().getModel();
		DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)Main_view.getInstance().getClasstree().getLastSelectedPathComponent();
		if(selectedNode==null)
			return;
		String nodeName = new String();
		nodeName = (String) selectedNode.getUserObject();
		ClusterModel.getInstance().removeModule(nodeName);
	}
	
	public void groupAction()
	{
		DefaultTreeModel model = (DefaultTreeModel)Main_view.getInstance().getClasstree().getModel();
		TreePath[] treepath = new TreePath[ModelInfo.getInstance().getModules().size()];
		//for(int i=0; i<ModelInfo.getInstance().getModules().size(); i++)
			//treepath[i] = ;
		treepath = Main_view.getInstance().getClasstree().getSelectionPaths();
		//System.out.print("=>"+treepath.length+"\n");
		//for(int i=0; i<treepath.length; i++)
		//System.out.print("=>"+treepath[0]+"\n");
		//System.out.print("=>"+treepath[3]+"\n");
		//System.out.print("=>"+treepath[4]+"\n");
	//	System.out.print("=>"+treepath[5]+"\n");
		//System.out.print("=>"+treepath[6]+"\n");
		for(int i=0; i<treepath.length; i++)
		{
			System.out.print("=>"+treepath[i].toString()+"\n");
		}
		//DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode)Main_view.getInstance().getClasstree()
		//String nodeName = new String();
		//nodeName = (String) selectedNode.getUserObject();
		
		
	}
	
	
	
}
