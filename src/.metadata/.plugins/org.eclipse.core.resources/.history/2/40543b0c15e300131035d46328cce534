package controller;

import javax.swing.JTree;
import model.TreeNode;
import model.DsmModel;
import java.util.Vector;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.DefaultMutableTreeNode;

public class TreeAction {

	JTree jtree = new JTree();
	DefaultMutableTreeNode root;
	int groupSize;
	
	TreeNode depthSearch(Vector<DefaultMutableTreeNode> nodes,TreeNode N)
	{
		if(N.isGroup()==false)
		{
			DefaultMutableTreeNode tr = new DefaultMutableTreeNode(N.key);
			nodes.add(N);
		}
		for(int i=0; i<N.childs.size();  i++)
		{
			
				DefaultMutableTreeNode tr = new DefaultMutableTreeNode(N.childs.get(i).key);
				nodes.add(tr);
			}
			else
			{
				
			}
		}
	}
	
	public TreeAction(JTree jt, DsmModel m)
	{
		Vector<DefaultMutableTreeNode> nodes = new Vector();
		groupSize =0;
		int size = m.getRootNode().childs.size();
		
		depthSearch(nodes, m.getRootNode());
	}
	
	
	public void collapseAll()
	{
		
	}
	public void expandAll()
	{
		
	}
	
	
	
	
}
