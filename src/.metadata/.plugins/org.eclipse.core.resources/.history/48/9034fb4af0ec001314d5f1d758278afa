package model;

import java.util.ArrayList;
import java.util.Vector;

public class ModelInfo {
	
	static private ModelInfo instance;
	
	private ArrayList<int[]> dependData;
	private Vector<TreeNode> modules;
	private TreeNode root;
	
	public ModelInfo(){
		dependData = new ArrayList<int[]>();
		modules = new Vector<TreeNode>();
		root = new TreeNode();
		root.setKey("$root");
	}
	
	static public ModelInfo getInstance(){
		
		if(instance==null){
			instance=new ModelInfo();
		}
		return instance;
	}

	public ArrayList<int[]> getDependData() {
		return dependData;
	}

	public Vector<TreeNode> getModules() {
		return modules;
	}

	public TreeNode getRoot() {
		return root;
	}

	public void setInstance(ModelInfo input)
	{
		this.instance = input;
	}
	
	public void setDependData(ArrayList<int[]> dependData) {
		this.dependData = dependData;
	}

	public void setModules(Vector<TreeNode> modules) {
		this.modules = modules;
	}

	public void setRoot(TreeNode root) {
		this.root = root;
	}
	
	public void setInit(int rowCount)
	{
		this.root.childs.removeAllElements();
		this.modules = new Vector<TreeNode>();
		this.dependData = new Vector<TreeNode>;
		
		for(int i=0; i<rowCount; i++)
		{
			String newModuleName = new String();
			newModuleName = "N"+ String.valueOf(i+1);
			TreeNode newModule = new TreeNode();
			
			newModule.key = newModuleName;
			newModule.parent = this.root;
			newModule.childs = null;
			System.out.println(newModule.key);
			this.root.childs.add(newModule);
			
			
			this.modules.add(newModule);
			
			int[] newDepend = new int[rowCount];
			this.dependData.add(newDepend);
		}
	}
	
	public void removeDependElement(int index)
	{
		dependData.remove(index);
		for(int i=0; i<dependData.size(); i++)
		{
			int[] newData = new int[dependData.size()];
			int newIndex=0;
			for(int j=0; j<dependData.get(i).length; j++)
			{
				if(j!=index)
				{
					newData[newIndex] = dependData.get(i)[j];
					newIndex++;
				}
			}
			dependData.set(i, newData);
		}
	}
}
