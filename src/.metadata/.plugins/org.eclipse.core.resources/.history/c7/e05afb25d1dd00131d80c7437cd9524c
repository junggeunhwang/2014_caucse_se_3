package model;

import java.io.*;
import java.util.Vector;
import java.util.ArrayList;;
public class DsmModel {
	
	private ArrayList<int[]> dependData;
	private ArrayList<String[]> moduleOrder;
	
	public DsmModel()
	{
		dependData = new ArrayList<int[]>();
		moduleOrder = new ArrayList<String[]>();
	}
	
	public ArrayList<int[]> getdependData()
	{
		return dependData;
	}
	public ArrayList<String[]> getmoduleOrder()
	{
		return moduleOrder;
	}
	
	public void reorderModule(int moduleNo, int move)
	{
		if(moduleOrder.get(moduleNo)[1] == moduleOrder.get(moduleNo+move)[1])
		{
			String tempEle = moduleOrder.get(moduleNo)[0];
			moduleOrder.get(moduleNo)[0] = moduleOrder.get(moduleNo+move)[0];
			moduleOrder.get(moduleNo+move)[0] = tempEle;
			int tempRow[] = new int[dependData.size()];
			tempRow = dependData.get(moduleNo);
			dependData.set(moduleNo, dependData.get(moduleNo+move));
			dependData.set(moduleNo+move, tempRow);
			int rowDepend[] = new int[dependData.size()];
			for(int i=0; i<dependData.size(); i++)
			{ 
				rowDepend = dependData.get(i);
				int temp = rowDepend[moduleNo];
				rowDepend[moduleNo] = rowDepend[moduleNo+move];
				rowDepend[moduleNo+move] = temp;
				dependData.set(i, rowDepend);
			}
		}
		else
			return;
	}

	public void reorderDepend(ArrayList<String[]> afterOrder)
	{
		int dependSize = dependData.size();
		ArrayList<int[]> tempDepend = new ArrayList<Strin[]>();
		int[] afterOrderNo = new int[dependSize];
		
		for(int i=0; i<dependSize; i++)
		{
			for(int j=0; j<dependSize; j++)
				if(moduleOrder.get(i)[0] == afterOrder.get(j)[0])
					afterOrderNo[j] = i;
		}
		int[] column = new int[dependSize];
		for(int i=0; i<dependSize; i++)
		{
			for(int j=0; j<dependSize; j++)
				column[j] = dependData.get(i)[j];
			tempDepend.set(i,column);
		}
		
	}
	
	
	
	public void readDsm(String filePath)
 	{
		 FileInputStream in = null;
			try
			{
				BufferedReader br = null;
				InputStreamReader isr = null;
				FileInputStream fis = null;
				File file = new File(filePath);
				fis = new FileInputStream(file);
				isr =  new InputStreamReader(fis, "UTF-8"); 
				br = new BufferedReader(isr);
				
				String temp = "";
				temp = br.readLine();
				int pivot = Integer.parseInt(temp);
				int dependency[][] = new int [pivot+1][pivot];
				String module[] = new String [pivot];
				
				int index=0;
				while(((temp = br.readLine()) != null)) 
				{
					 if(index<pivot)
					 {
					    	for(int j=0; j<pivot; j++)
					    	{
					    		dependency[index][j] = Integer.parseInt(temp.substring(2*j, 2*j+1));				    		 
					    	}
					 }
					 else
					 {
						 module[index-pivot] = temp;
					 }
					    index++;
				}
				for(int i=0; i<pivot; i++)
					dependData.add(dependency[i]);
				
				String[] data = new String[2];
				for(int i=0; i<pivot; i++)
				{
					data[0] = module[i];
					data[1] = "$root";
					moduleOrder.set(i,data);
				}
				
			}catch(FileNotFoundException fnfe)
			{
				System.out.println("파일을 찾을 수 없습니다.");
			}catch(IOException ioe){}
			
			finally
			{
				try
				{
					in.close();
				}catch(Exception e){}
			}
	}

}
